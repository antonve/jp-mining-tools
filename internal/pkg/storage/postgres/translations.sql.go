// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: translations.sql

package postgres

import (
	"context"

	"github.com/google/uuid"
)

const getTranslation = `-- name: GetTranslation :one
select
  id,
  translation
from translations
where
  source_language_code = $1
  and target_language_code = $2
  and input = $3
limit 1
`

type GetTranslationParams struct {
	SourceLanguageCode string
	TargetLanguageCode string
	Input              string
}

type GetTranslationRow struct {
	ID          uuid.UUID
	Translation string
}

func (q *Queries) GetTranslation(ctx context.Context, arg GetTranslationParams) (GetTranslationRow, error) {
	row := q.db.QueryRowContext(ctx, getTranslation, arg.SourceLanguageCode, arg.TargetLanguageCode, arg.Input)
	var i GetTranslationRow
	err := row.Scan(&i.ID, &i.Translation)
	return i, err
}

const storeTranslation = `-- name: StoreTranslation :one
insert into translations (
  source_language_code,
  target_language_code,
  input,
  translation
) values (
  $1,
  $2,
  $3,
  $4
)
returning id
`

type StoreTranslationParams struct {
	SourceLanguageCode string
	TargetLanguageCode string
	Input              string
	Translation        string
}

func (q *Queries) StoreTranslation(ctx context.Context, arg StoreTranslationParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, storeTranslation,
		arg.SourceLanguageCode,
		arg.TargetLanguageCode,
		arg.Input,
		arg.Translation,
	)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
